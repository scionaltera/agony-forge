buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath group: 'org.owasp', name: 'dependency-check-gradle', version: '5.3.2.1'
        classpath group: 'org.kordamp.gradle', name: 'stats-gradle-plugin', version: '0.2.2'
        classpath group: 'se.transmode.gradle', name: 'gradle-docker', version: '1.2'
        classpath group: 'info.solidsoft.gradle.pitest', name: 'gradle-pitest-plugin', version: '1.5.1'
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

apply plugin: 'maven'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'org.kordamp.gradle.stats'
apply plugin: 'docker'

group 'com.agonyforge'
version '0.5.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations.maybeCreate("pitest")

dependencies {
    pitest group: 'org.pitest', name: 'pitest-junit5-plugin', version: '0.12'

    implementation 'javax.inject:javax.inject:1'
    implementation 'javax.interceptor:javax.interceptor-api:1.2.2'

    implementation 'mysql:mysql-connector-java:8.0.20'
    implementation 'org.flywaydb:flyway-core:5.2.4'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-websocket') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.session:spring-session-jdbc'

    implementation 'io.projectreactor.netty:reactor-netty:0.9.12.RELEASE'

    implementation 'org.webjars:webjars-locator-core:0.45'
    implementation 'org.webjars:jquery:3.5.1'
    implementation 'org.webjars:popper.js:2.0.2'
    implementation 'org.webjars:bootstrap:4.5.0'
    implementation 'org.webjars:font-awesome:5.13.0'

    implementation 'commons-io:commons-io:2.7'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation 'org.mockito:mockito-core:3.3.0'
}

test {
    useJUnitPlatform()
}

task buildDocker(type: Docker) {
    push = false
    applicationName = jar.getArchiveBaseName().get()
    dockerfile = file('src/main/docker/local/Dockerfile')
    tagVersion = "latest"
    tag = "scionaltera/${applicationName}"

    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

build.dependsOn project.tasks.buildDocker

pitest {
    testPlugin = "junit5"
    excludedClasses = [
        'com.agonyforge.core.AgonyForge',
        'com.agonyforge.core.config.*'
    ]
    excludedMethods = [
        'hashCode',
        'equals'
    ]
    coverageThreshold = 70
    mutationThreshold = 70
    timestampedReports = false
}

dependencyCheck {
    suppressionFile "codequality/cve-suppressions.xml"
}

check.dependsOn project.tasks.pitest, project.tasks.dependencyCheckAnalyze, project.tasks.stats

// ensure pitest runs after junit, because pitest requires all tests to have passed
project.tasks.pitest.mustRunAfter test
