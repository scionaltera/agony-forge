plugins {
    id 'info.solidsoft.pitest' version '1.7.4'
    id 'org.owasp.dependencycheck' version '7.1.1'
    id 'com.palantir.docker' version '0.34.0'
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
}

group 'com.agonyforge'
version '0.5.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations.maybeCreate("pitest")

dependencies {
    pitest group: 'org.pitest', name: 'pitest-junit5-plugin', version: '0.16'

    implementation 'javax.inject:javax.inject:1'
    implementation 'javax.interceptor:javax.interceptor-api:1.2.2'

    implementation 'mysql:mysql-connector-java:8.0.29'
    implementation 'org.flywaydb:flyway-mysql:8.5.13'

    implementation 'com.hazelcast:hazelcast:5.1.2'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation('org.springframework.boot:spring-boot-starter-websocket') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-jetty'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.security:spring-security-taglibs'
    implementation 'org.eclipse.jetty:apache-jsp:11.0.11'

    implementation 'org.springframework.session:spring-session-hazelcast'

    implementation 'io.projectreactor.netty:reactor-netty:1.0.20'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'

    implementation 'org.webjars:webjars-locator-core:0.52'
    implementation 'org.webjars:jquery:3.6.0'
    implementation 'org.webjars:popper.js:2.9.3'
    implementation 'org.webjars:bootstrap:5.1.3'
    implementation 'org.webjars:font-awesome:6.1.1'

    implementation 'commons-io:commons-io:2.11.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.mockito:mockito-core:4.6.1'
}

test {
    useJUnitPlatform()
}

jar {
    enabled = false // don't build the plain, non-executable jar
}

bootJar {
    manifest {
        attributes(
            'Implementation-Title': jar.getArchiveBaseName().get(),
            'Implementation-Version': getArchiveVersion())
    }
}

docker {
    def applicationName = jar.getArchiveBaseName().get()
    name "scionaltera/${applicationName}"
    dockerfile file('src/main/docker/local/Dockerfile')
    files tasks.bootJar.outputs
}

project.tasks.build.dependsOn tasks.docker

pitest {
    excludedClasses = [
        'com.agonyforge.core.AgonyForge',
        'com.agonyforge.core.config.*'
    ]
    excludedMethods = [
        'hashCode',
        'equals',
        'toString'
    ]
    coverageThreshold = 70
    mutationThreshold = 70
    timestampedReports = false
}

dependencyCheck {
    suppressionFile "codequality/cve-suppressions.xml"
}

check.dependsOn project.tasks.pitest, project.tasks.dependencyCheckAnalyze

// ensure pitest runs after junit, because pitest requires all tests to have passed
project.tasks.pitest.mustRunAfter test
